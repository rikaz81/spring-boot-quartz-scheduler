// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sample.proto

package com.accelaero.aeroinventory.sample;

public final class Sample {
  private Sample() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aeroinventory_ChargeQuoteRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aeroinventory_ChargeQuoteRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aeroinventory_ChargeQuoteResponse_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aeroinventory_ChargeQuoteResponse_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\014sample.proto\022\raeroinventory\032\034google/ap" +
      "i/annotations.proto\"*\n\022ChargeQuoteReques" +
      "t\022\024\n\014flightNumber\030\001 \001(\t\"*\n\023ChargeQuoteRe" +
      "sponse\022\023\n\013totalAmount\030\001 \001(\0052\263\002\n\rSampleSe" +
      "rvice\022\211\001\n\013quoteCharge\022!.aeroinventory.Ch" +
      "argeQuoteRequest\032\".aeroinventory.ChargeQ" +
      "uoteResponse\"3\202\323\344\223\002-\022+/aeroinventory/sam" +
      "pleservice/{flightNumber}\022\225\001\n\021quoteCharg" +
      "eByPost\022!.aeroinventory.ChargeQuoteReque" +
      "st\032\".aeroinventory.ChargeQuoteResponse\"9" +
      "\202\323\344\223\0023\"./aeroinventory/sampleservice/quo" +
      "teChargeByPost:\001*B&\n\"com.accelaero.aeroi" +
      "nventory.sampleP\001b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.api.AnnotationsProto.getDescriptor(),
        }, assigner);
    internal_static_aeroinventory_ChargeQuoteRequest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_aeroinventory_ChargeQuoteRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aeroinventory_ChargeQuoteRequest_descriptor,
        new java.lang.String[] { "FlightNumber", });
    internal_static_aeroinventory_ChargeQuoteResponse_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_aeroinventory_ChargeQuoteResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aeroinventory_ChargeQuoteResponse_descriptor,
        new java.lang.String[] { "TotalAmount", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.google.api.AnnotationsProto.http);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.google.api.AnnotationsProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
